{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  const snapshot = yield collectionRef.get();\n  const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot); // collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //         const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n  //         dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/rizkypm/Complete React Developer in 2020 (with Redux, Hooks, GraphQL)/E-Commerce/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACIC,SADJ,EAEIC,8BAFJ,QAGO,+BAHP;AAKA,SACIC,uBADJ,EAEIC,uBAFJ,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,aAAa,GAAG,MAAMb,IAAI,CAACE,8BAAD,EAAiCS,QAAjC,CAAhC,CALqC,CAOrC;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACrC,QAAMf,SAAS,CACXM,eAAe,CAACU,uBADL,EAEXT,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n    firestore,\n    convertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nimport {\n    fetchCollectionsSuccess,\n    fetchCollectionsFailure\n} from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"I am fired\");\n\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n\n    // collectionRef\n    //     .get()\n    //     .then(snapshot => {\n    //         const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    //         dispatch(fetchCollectionsSuccess(collectionsMap));\n    //     })\n    //     .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n}\n"]},"metadata":{},"sourceType":"module"}