{"ast":null,"code":"var _jsxFileName = \"/home/rizkypm/Complete React Developer in 2020 (with Redux, Hooks, GraphQL)/E-Commerce/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    fetch(\"https://firestore.googleapis.com/v1/projects/crwn-clothing-db-2346/databases/(default)/documents/collections\").then(response => response.json()).then(collections => console.log(collections)); // collectionRef.get().then(snapshot => {\n    //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/home/rizkypm/Complete React Developer in 2020 (with Redux, Hooks, GraphQL)/E-Commerce/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionsOverview","CollectionPage","updateCollections","firestore","convertCollectionSnapshotToMap","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","response","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SACIC,SADJ,EAEIC,8BAFJ,QAGO,+BAHP;AAKA,MAAMC,8BAA8B,GAAGN,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMM,0BAA0B,GAAGP,WAAW,CAACE,cAAD,CAA9C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAOnCC,EAAAA,iBAAiB,GAAG;AAAA,UACRV,iBADQ,GACc,KAAKW,KADnB,CACRX,iBADQ;AAEhB,UAAMY,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CACD,8GADC,CAAL,CAGKC,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,EAIKF,IAJL,CAIUG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAJzB,EAJgB,CAUhB;AACA;AACA;AACA;AACA;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKX,KADlB,CACGW,KADH;AAAA,UAEGd,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEc,KAAK,CAACC,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAEZ,KAAK,IACT,oBAAC,8BAAD;AACI,QAAA,SAAS,EAAEH;AADf,SAEQG,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAWI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAEZ,KAAK,IACT,oBAAC,0BAAD;AACI,QAAA,SAAS,EAAEH;AADf,SAEQG,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAuBH;;AAlDkC;;AAqDvC,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAE0B,cAAc,IAC7BD,QAAQ,CAACzB,iBAAiB,CAAC0B,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAKA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nimport {\n    firestore,\n    convertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const { updateCollections } = this.props;\n        const collectionRef = firestore.collection(\"collections\");\n\n        fetch(\n            \"https://firestore.googleapis.com/v1/projects/crwn-clothing-db-2346/databases/(default)/documents/collections\"\n        )\n            .then(response => response.json())\n            .then(collections => console.log(collections));\n\n        // collectionRef.get().then(snapshot => {\n        //     const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n        //     updateCollections(collectionsMap);\n        //     this.setState({ loading: false });\n        // });\n    }\n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return (\n            <div className=\"shop-page\">\n                <Route\n                    exact\n                    path={`${match.path}`}\n                    render={props => (\n                        <CollectionsOverviewWithSpinner\n                            isLoading={loading}\n                            {...props}\n                        />\n                    )}\n                />\n                <Route\n                    path={`${match.path}/:collectionId`}\n                    render={props => (\n                        <CollectionsPageWithSpinner\n                            isLoading={loading}\n                            {...props}\n                        />\n                    )}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap =>\n        dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}